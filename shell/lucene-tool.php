<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2015
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of distribution, sell, transfer, reverse engineering forbidden - see licence above
 *
 * Code was obfuscated due to previous licence violations
 */ 
$_F=__FILE__;$_X="JF9GPV9fRklMRV9fOyRfWD0iSkY5R1BWOWZSa2xNUlY5Zk95UmZXRDBpVEhsdmNVUlJiMmRMYVVKQldUSkdNRnBYWkhaamJtdG5TVU5DVVdGSVFUQmtVVEJMU1VOdloxRklRbWhaTW5Sb1dqSlZaMGxEUVdkVlIyaDNUa2hXWmxGdGVHaGpNMUpOWkZkT2JHSnRWbFJhVjBaNVdUSm5Ua05wUVhGSlJVSm9aRmhTYjJJelNXZEpRMEZuU1VVeGFHTnRUbkJpYVVKVVpXNVNiR050ZUhCaWJXTm5VRWN4YUdOdFRuQmlhMEozWVVoQk1HUlROV3BpZVRVeFlYbzBUa05wUVhGSlJVSnFZak5DTldOdGJHNWhTRkZuU1VaQ2IyTkVVakZKUlRGb1kyMU9jR0pwUWxSbGJsSnNZMjE0Y0dKdFkyZExSMDF3U1VSSmQwMVVSWFJOYWtGNFRsRXdTMGxEYjJkUlIzaHdXVEpXZFdNeVZXZGhTRkl3WTBSdmRrd3pRbTlqUkZJeFRHMU9ka3h1Vm5KTU1uaHdXVEpXZFZreVZYWkVVVzluUzJsQ1ZWTkZWV2RWTURsSFZrWmtRbFZyVldkVFZrMW5WVVpLVUZacmJFVlNWVkZuU1d0R1ZFbEZiRlJKYVhkblZqQnNWVk5GT1ZaV1EwSllVVlpLVTFGVk5WVlhVMEpRVW1sQ1FsUnNhMmRUTUd4UFVrTjNaMUpXYUZGVmExWlVWWGxDVUZWbk1FdEpRMjluVTFVeFVWUkZiRVpTUTNkblUxVTFSRlJHVmtWVFZUVklTVVZLVmxaRFFrOVVNVkZuVkVWc1RsTldVa1pTUTBKVlZIbENWVk5GVldkV01FWlRWV3RHVDFaRmJFWlZlVUpRVW1sQ1RsSldTa1JUUlVaUFZrVkdRMU5WZUVwV1JtdHpSRkZ2WjB0cFFrZFRWbEpQVWxaT1ZFbEZXbEJWYVVKQ1NVWkNRbFZzVWtwUk1WWk5VVlpKWjFWR1ZsTlZSVGxVVWxOQ1FsUnJVV2RVYXpsUFUxVTFSMVZyYkU5U01GWk9VbFUxVlV4cFFrcFVhVUpQVkhsQ1JsWnJWazlXUTBKVVUwVkdUVlJEUWxWVFJWVk9RMmxCY1VsRlJsWldSV2hRVld4TloxUXhTV2RSTURsUlYxWktTbEl3YUZWSlJXaFFWRVZTUmxWc1RXZFJhMVZuVkVWc1FsRnJlRVpKUlZwUVZXbENRbFJzYTJkUk1IaENVMVV3YzBsRlVrSlVWVVpJVWxaTloxUXhTV2RVTVZKSlVsWkpUa05wUVhGSlJYaEtVVlZLU2xSRmJGVlhVM2RuVmpCb1JsWkZhRVpWYVVKS1ZHbENRbFJwUWtKUk1WSktWREEwWjFRd1dXZFJNRGxQVmtaS1FsRXhVWE5KUmxKUVZXeFJaMVF4U1dkVU1WSkpVbFpLV0ZOV1RrWk1RMEpDVld0c1ZGTlZOVWhKUlZwVFZEQXdjMFJSYjJkTGFVSlFWbFpSWjFRd1dXZFVNVWxuVTFVMFoxRXdPVTlVYTFaRVZrVnNVRlJwUWxoVFZsSkpTVVpTU1ZKVFFsUlVNRnBWVmpCR1UxSlRRbEJWYVVKVlUwVlZaMVpXVGtaSlJUbFRTVVU1VlZORlZsTkpSVkpHVVZWNFNsUnJaRlJKUld4UFJGRnZaMHRwUWxWVFJWVm5WVEE1UjFaR1pFSlZhMVYxUkZGdlowdHBRa0ppYm10bldtMDVlV0pUUW5aYWFVSnJZVmhPTUdOdGJHbGtXRkp3WWpJMGMwbElUbXhpUjNkelNVaFNlVmxYTlhwYWJWWjVTVWRhZG1OdFNuQmFSMUpzWW1sM1oyTnRWakphV0VwNldsTkNiR0p0WkhCaWJWWnNZMjFzZFZwNVFtMWlNMHBwWVZkU2ExcFhOR2RNVTBKNldsZFZaMkpIYkdwYVZ6VnFXbE5DYUZsdE9USmFVVEJMU1VOdlRrTnBRWEZKUlU1MldrZFZaMlF5Um5wSlJ6bHBXbTVXZWxsWFRqQmFWMUZuV2toV2JFbElVblpKU0VKNVdsaGFjR0l6Vm5wSlIzaHdXVEpXZFZreVZXZGtiV3gyWWtkR01HRlhPWFZqZHpCTFNVTnZka1JSYjBwRFVXdG5ZMjFXZUdSWGJIbGFWamwyWW0xT2JFbEhVbkJqYlRWb1lsZFZiMWd4T1VkVFZYaEdXREU0Y0VsRE5HZEtlVGxvV1c1T01HTnRSbXBrUXpWM1lVaEJiazk1UW1waVIwWjZZM2xDVGxsWFpHeFlNVTV2V2xkNGMxZ3dlREZaTWxaMVdsWTVWV0l5T1hOSlIxWTBaRWRXZFZwSVRXZFVWMFp1V2xZNVZHRkhWbk5pUmpsQ1dXNU9NR050Um1wa1EwSTNTVWhDZVdJelVteFpNMUpzV2tOQmExZ3pUbWhKUkRCbldWaEtlVmxZYTI5TFZITm5ZMGhLZG1SSFZtcGtSMVpyU1VOU1ptTXpVblpqYlZaS1drTkJPVWxFUVRkSlNFSjVZak5TYkZrelVteGFRMEZyV0ROQ2VXSXlUbXhqTTA1c1drVk9kbVJYTlRCSlJEQm5UVVJ6WjJOSVNuWmtSMVpxWkVkV2EwbERVbVprUnprd1dWZDNaMUJUUVhkUGVVSjNZMjA1TUZwWFRqQmFWMUZuU2tZNU1HRlhNV3hqYkU0d1dWaEtNRWxFTUdkTlJITm5ZMGhLZG1SSFZtcGtSMVpyU1VOU1ptUkhiSFJhV0VwR1lrZEdkMk15Vm10SlJEQm5UVVJ6WjJOSVNuWmtSMVpxWkVkV2EwbERVbVpaV0ZJd1kyMXNhV1JZVW14amVVRTVTVWRHZVdOdFJqVkxRMnMzU1VoQ01WbHRlSEJaZVVKdFpGYzFhbVJIYkhaaWFVSjVaRmMwYjB0VFFqZEpRMUl3WVVkc2VreFVOV1prUjJ4MFdsaEtWR1JIUm5sa1EyZHdUM2xDY0ZwcFFXOUtTRkp2WVZoTmRGQnRaR3hrUlVaNVdubG5ibU50Vm5SaU0xcHNXREkxZG1SR09XeGxSMng2WkVkc2RWcDVZM0JMVTBJM1NVTlNaazlVVFRCTmVrbDRUMFJOZWxscVJtMU9SMDVvVGxkRk1WcEVWVFZOVkdScVdsUktiRTV0V214TlJFRm5VRk5CYTJSSGFIQmplVEFyV2pKV01GRllTbTVMUTJSNVdsY3hkbVJ0Vm1aaWJUa3dXREpXTkdGWVRqQmhWelZ1U25sck4wbEhiRzFKUTJkb1NraFNiMkZZVFhSUWJscG9Za2RzYTFsWVVteFZNMUoyWTIxVmIwcEdPRFZOZWxGNlRXcEZORTE2VG1sTlYxa3dXVEpGTVZsVVZtdE9WR3Q0VGpKT2JFMXRWVEphYlZWM1RVTnJjRWxJYzJkYVIyeHNTME5LVkdSSE9YbGFVMEpLV2tOQmExaDZhM3BPUkUxNVRWUm5lazB5U1hoYWFsSnFXVlJXYUU1WFVURlBWRVV6V1RKVmVWcFVXbTFhVkVGM1NVZHNla2xITlhaa1EwSXlXVmQ0Y0ZwR2VIVkphV3MzU1Vnd1oxcFhUbTlpZVVGcFZUTlNhR051VW5CaWJXTjFUR2sxWTJKcFNUZEpSVEZvV2pKVk5rOXRaR3hrUlRGMldrZFdjMHREWkdsaVIwWjZaRWQ0TVZreVZuVmFXRTVzV1ZoS2FtRkRPV2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRFkzQk1WRFY2V2xoU1RXSXlaRlJhV0U1NllWYzVkVXRIV21oaVNFNXNTMU13SzJNeVZqQlZNMUoyWTIxV1NscERaMnRZZW10NlRrUk5lVTFVWjNwTk1rbDRXbXBTYWxsVVZtaE9WMUV4VDFSRk0xa3lWWGxhVkZwdFdsUkJkMHRUTUN0amJWWjBZak5hYkZSdE9UQlNXR2h3WXpOU2NHSnRaRWRqYlRsMFUxYzFhMXBZWjI5TFZITm5XbGRPYjJKNVFXbFNSemwxV2xNMGRVeHNlSFZKYW5OblpsTkNiR0pJVG14aFYxbG5TME5TTUdGSGJIcE1WRFZ1V2xoU1FtTnRZMjlLTTBwc1l6SldNRmd6VG14WldFcHFZVVk1ZVZwWVRqRmlTRko2U25scmNFbEljMmRhVjA1dllubEJhVlV6VW1oamJsSndZbTFqZFV4cE5XTmlhVWszU1VVeGFGb3lWVFpQYldSc1pFWk9jR0p0WkhOYVdGSjJZbWxuYmxreVJqQlpWM2gyV2pOT2JGbFlTbXBoUXpsMFpWaE9lR0pFVW1aYWJsWnpZa2hTYkdWSVVXNUxVekFyWTIxV2VscFlVbFJhVjBaNVdUSm9VMXBZVGpGaVNGSjZTME5yTjBsSFZtcGhSemhuU1d0U2RtSnRWWFZNYVRWalltbEpOMGxJTUdkYVYzaDZXbGRzYlVsRFoydGtSMmh3WTNrd0sxb3lWakJSV0VwdVMwTmtkbU5JVW5CaVYydzJXbFk1Y0dKdFVteGxRMk53UzFOQ04wbERVbVpQVkUwd1RYcEplRTlFVFhwWmFrWnRUa2RPYUU1WFJURmFSRlUxVFZSa2FscFVTbXhPYlZwc1RVUkJaMUJUUVd0a1IyaHdZM2t3SzFveVZqQlJXRXB1UzBOa2RtTklVbkJpVjJ3MldsWTVjR0p0VW14bFEyTndUM2xDY0ZwcFFXOUpVMUl3WVVkc2VreFVOVEpaVjNod1drZEdNRnBXVGpCaU0wcHNTME5TWms5VVRUQk5la2w0VDBSTmVsbHFSbTFPUjA1b1RsZEZNVnBFVlRWTlZHUnFXbFJLYkU1dFdteE5SRUZ3UzFOQ04wbEhVbkJhVTJkcFZUTlNkbU50VldkVFYxRm5Ta1k0TlUxNlVYcE5ha1UwVFhwT2FVMVhXVEJaTWtVeFdWUldhMDVVYTNoT01rNXNUVzFWTWxwdFZYZE5RMEp3WTNsQ2RXSXpVV2RrYlVaellWZFNZMkpwU1hCUGVVSTVTVWRXYW1GSE9HZEpiRTR3V1ZoS01HRlhOVzVNYVRSMVdFYzBhVTk1UWs1WlYyUnNUMnB3YmxwWVVrNWlNbEpzWWtObmJsbHRlR2hqTTFKelpGZE9iR0p0Vm5wYVYwWjVXVEpuZGxsdGVHaGpNMUp6WkZkT2JHSnRWbnBhVjBaNVdUSm5ia3RUTUN0ak1sWXdWRWM1YmxVeVZucGpNbXgyWW1sb2JWbFhlSHBhVTJ0MFVHNU9iR1JHVGpCaU0wcHNVMWRSYjBwR09EVk5lbEY2VFdwRk5FMTZUbWxOVjFrd1dUSkZNVmxVVm10T1ZHdDRUakpPYkUxdFZUSmFiVlYzVFVOcmRGQnRPWGRrUjJ4MFlWaHdiRk5YTld0YVdHZHZTMVJ6WjFwWFRtOWllVUZwVWtjNWRWcFROSFZNYkhoMVNXcHpaMlpUUW14aVNFNXNZVmRaWjB0RFVqQmhSMng2VEZRMWJscFlVa0pqYldOdlNqSXhhR050ZEdaa1Z6VjNZMjA1YWxwWVRucGFWMUZ1UzFOQmFGQlVNR2RhYlVaell6SlZjRWxJYzJkS1JqZzFUWHBSZWsxcVJUUk5lazVwVFZkWk1Ga3lSVEZaVkZaclRsUnJlRTR5VG14TmJWVXlXbTFWZDAxRFFUbEpRMUl3WVVkc2VreFVOVzVhV0ZKQ1kyMWpiMG95TVdoamJYUm1aRmMxZDJOdE9XcGFXRTU2V2xkUmJrdFVjMmRoVjFsblMwTkZhMlJIYUhCamVUQXJaRzFHYzJGWFVtaGtSMVpVWkVjNWVWcFRaMnRZZW10NlRrUk5lVTFVWjNwTk1rbDRXbXBTYWxsVVZtaE9WMUV4VDFSRk0xa3lWWGxhVkZwdFdsUkJkMHRUYTJkbGVVSnJZVmRWYjBsc1RqQmlNMHBzU1VWc2EwbERVbVpQVkUwd1RYcEplRTlFVFhwWmFrWnRUa2RPYUU1WFJURmFSRlUxVFZSa2FscFVTbXhPYlZwc1RVUkJaMkZZVFdkaWJUa3dTVWhhYUdKSGJHdFlSelJwUzFSeloyWlRRbkJhYVVGdlNraFNiMkZZVFhSUWJXUnNaRVZHZVZwNVoyNWpNbWgyWkRFNWVtTlhkMjVMVTJ0blpYbEJhMWg2WkdwTlZFMHpXVEpSTWsxVWF6Rk5iVVpxVFhwSk1VNTZUVFJhYlZWNFRVUkJkMDR5UlhoT2FrRXhTVVF3WjBsc1RrWlVSVlpFVmtOQ2JHSnVVbkJrU0d4bVpFaHNkMXBXT1hCYVEwSkhWV3M1VGtsSFFXbE1hekZvV2pKVk5rOXRaR3hrUms1d1ltMWtjMXBZVW5aaWFXZHVXVEk1ZVZwVE9YbGFXRTUyWkZoS2FscFRZM0JNVkRWdVdsaFNWVmxYU25OYVZUVm9ZbGRWYjBveVZtaGtiRGxvWkVoU2VXRlhTakZrUjFWdVMxTTBhVmxEUWxoVFJWWlRVbE5DWjFsWVVqQmpiV3hwWkZoU2JGZ3lUblphUjFablNVUXdaMG95ZURGWk1sWjFXbFk1Y0dKdFVteGxSMVpyU25sSk4wbERVbVpaYWsxNFQwUmpNazFFV21oWk1rbDZXa2RHYTA1NlVtcE5lbEY1V20xU2FFMXFhek5hVkVVd1drZFJaMUJUUVdsVk1GWk5VbFZPVlVsSFJqQmtTRXB3V1c1V01GcFdPWEJhUTBKSFZXczVUa2xIUVdsTWF6Rm9XakpWTms5dFpHeGtSazV3WW0xa2MxcFlVblppYVdkdVdUSTVlVnBUT1hsYVdFNTJaRmhLYWxwVFkzQk1WRFZ1V2xoU1ZWbFhTbk5hVlRWb1lsZFZiMG95Vm1oa2JEbG9aRWhTZVdGWFNqRmtSMVZ1UzFNMGFWbERRbGhUUlZaVFVsTkNaMWxZVWpCamJXeHBaRmhTYkZneVRuWmFSMVpuU1VRd1owb3llREZaTWxaMVdsWTVjR0p0VW14bFIxWnJTbmxKTjBsRFVtWlpWR013VG5wT2FVMTZRbXBPTWxsNlRVZFJNbGxxV20xYVJHTjNUWHByTUZsNlpHcFBSMFpyVGtSSloxQlRRV2xTUlZaTlVsWlNSa2xGV2xOVU1EQm5XVU5KZFZSWFJtNWFWRzgyV2pKV01GUlhPV3RhVjNkdlNqSktjMWxZVGpCaVNGWnFXbGMxYkdNeVZtaGpiVTV2VERKS2MxbFlUakJpU0ZacVdsYzFiR015Vm1oamJVNXZTbmxyZEZCdFpHeGtSa0o1WWpKU01Wa3pVbFZaVjBweldsVnNkV1JGTldoaVYxVnZTMU0wYVZsRFFsaFRSVlpUVWxOQ2JHSnVVbkJrU0d4bVpFaHNkMXBXT1hCYVEwSktWR2xCYjJWNVVtWk9NazE0VFhwa2FscEVXWGhQVkZWNVdWZE5lazFxVlROTmVtaHRXbFJGZDAxRVFUTlpWRVV5VFVSV09VdFRRa0pVYTFGbldWaFNNR050Ykdsa1dGSnNXREpzYTBsRmJFOUpRMmczU2tZNWFVMTZSVFJPZWxsM1RtMUdhbGxxVG10WlYxRXpUa2ROZWs1RVNtMWFSMFY1VDFSa2JFMVVVbXRhU0RCd1NVVkdUMUpEUW5wa1J6bDVXbFk1Y0ZwRFFUbEpRMk5wVEdsU1prOVVUVEJOZWtsNFQwUk5lbGxxUm0xT1IwNW9UbGRGTVZwRVZUVk5WR1JxV2xSS2JFNXRXbXhOUkVGMVNXbGpOMGxxYzJkYVYwNXZZbmxCYVZVeFJrMVBiSGgxU2tZNWFFNTZVVE5OTWtsNlRVZE5NMXBxVFhkYVJGcHBUbTFhYTA1NlFYcFBWRkpxVGpKTk5GbFhVVEJOYkhoMVNXcHpaMlpUUW14aVNFNXNTVWh6WjFwWFRtOWllVUZwVlROU2FHTnVVbkJpYldOMVRHazFZMkpwU1RkSlJURm9XakpWTms5dGFHeGlTRUpzWTJsbmJtTkhhSGRPU0ZWdVMxTXdLMkpYUm5saE1WWjFZMGhLZGxreVZucGpNbFpyVW0wNWVWVXpVblpqYlZaS1drTm5hMWg2YTNwT1JFMTVUVlJuZWsweVNYaGFhbEpxV1ZSV2FFNVhVVEZQVkVVeldUSlZlVnBVV20xYVZFRjNTMVJ6WjFwWFRtOWllVUZwVWtjNWRWcFROSFZNYkhoMVNXcHpaMlpUUWpsSlIxWnpZekpXY0ZwcFFXOUtTRkp2WVZoTmRGQnRaR3hrUlVaNVdubG5ibGt5T1RGaWJsSm1ZMGhLZGxreVZucGpNbFpyU25scmNFbEljMmRLUmpnMVRYcFJlazFxUlRSTmVrNXBUVmRaTUZreVJURlpWRlpyVGxScmVFNHlUbXhOYlZVeVdtMVZkMDFEUVRsSlExSXdZVWRzZWt4VU5XNWFXRkpDWTIxamIwb3lUblprVnpVd1dETkNlV0l5VG14ak0wNXNXa05qY0U5NVFuQmFhVUZ2U1ZOU01HRkhiSHBNVkRVeVdWZDRjRnBIUmpCYVZrNHdZak5LYkV0RFVtWlBWRTB3VFhwSmVFOUVUWHBaYWtadFRrZE9hRTVYUlRGYVJGVTFUVlJrYWxwVVNteE9iVnBzVFVSQmNFdFRRamRKUjFKd1dsTm5hVlV6VW5aamJWVm5VMWRSWjBwR09EVk5lbEY2VFdwRk5FMTZUbWxOVjFrd1dUSkZNVmxVVm10T1ZHdDRUakpPYkUxdFZUSmFiVlYzVFVOQ2NHTjVRblZpTTFGblpHMUdjMkZYVW1OaWFVbHdUM2xDT1VsSFZtcGhSemhuU1d0T2RtUlhOVEJoVnpWdVRHazBkVmhITkdsUGVVSnNXVEpvZGtsRk1XaGFNbFUyVDIxa2JHUkZNWFphUjFaelMwTmthV0pIUm5wa1IzZ3hXVEpXZFZwWVRteFpXRXBxWVVNNWFXSkhSbnBrUjNneFdUSldkVnBZVG14WldFcHFZVU5qY0V4VU5YcGFXRkpOWWpKa1ZGcFlUbnBoVnpsMVMwZGFhR0pJVG14TFV6QXJZekpXTUZVelVuWmpiVlpLV2tObmExaDZhM3BPUkUxNVRWUm5lazB5U1hoYWFsSnFXVlJXYUU1WFVURlBWRVV6V1RKVmVWcFVXbTFhVkVGM1MxTXdLMWt5T1RGaWJsSktZbTFTYkdWSFZtdExRMnMzU1VkV2FtRkhPR2RKYVVKM1kyMDVhbHBZVG5wYVYxRm5ZMGhLZGxwSVZtcGtTRTVqWW1sSk4wbEhWbXBoUnpoblNXdFNkbUp0VlhWTWFUVmpZbWxKTjBsSU1HZGFWM2g2V2xkc2JVbERaMnRrUjJod1kza3dLMW95VmpCUldFcHVTME5rYW1JelZuVmtSamx3WW0xU2JHVkhWbXRLZVd0d1NVaHpaMHBHT0RWTmVsRjZUV3BGTkUxNlRtbE5WMWt3V1RKRk1WbFVWbXRPVkd0NFRqSk9iRTF0VlRKYWJWVjNUVU5CT1VsRFVqQmhSMng2VEZRMWJscFlVa0pqYldOdlNqSk9kbVJYTlRCWU1teDFXa2RXTkZwWFVXNUxWSE5uWVZkWlowdERSV3RrUjJod1kza3dLMlJ0Um5OaFYxSm9aRWRXVkdSSE9YbGFVMmRyV0hwcmVrNUVUWGxOVkdkNlRUSkplRnBxVW1wWlZGWm9UbGRSTVU5VVJUTlpNbFY1V2xSYWJWcFVRWGRMVTJ0blpYbENhMkZYVlc5SmJFNHdZak5LYkVsRmJHdEpRMUptVDFSTk1FMTZTWGhQUkUxNldXcEdiVTVIVG1oT1YwVXhXa1JWTlUxVVpHcGFWRXBzVG0xYWJFMUVRV2RoV0UxblltMDVNRWxJV21oaVIyeHJXRWMwYVV0VWMyZG1VMEpzV1RKb2RrbERTa1JpTTFaMVpFZHNkVnA1TkhWTWJIaDFTV3B6WjFwWFRtOWllVUpPV1Zka2JFOXFjRzVhV0ZKT1lqSlNiR0pEWjI1WmJYaG9Zek5TYzJSWFRteGliVlo2V2xkR2VWa3laM1paYlhob1l6TlNjMlJYVG14aWJWWjZXbGRHZVZreVoyNUxVekFyWXpKV01GUkhPVzVWTWxaNll6SnNkbUpwYUcxWlYzaDZXbE5yZEZCdVRteGtSazR3WWpOS2JGTlhVVzlLUmpnMVRYcFJlazFxUlRSTmVrNXBUVmRaTUZreVJURlpWRlpyVGxScmVFNHlUbXhOYlZVeVdtMVZkMDFEYTNSUWJXUnNaRVpPY0dWdFZXOUxWSE5uV2xkT2IySjVRV2xKUjFKMldUTldkRnBYTlRCamVVSndZbWxDY0dKdFVteGxSbmgxU1dweloxcFhUbTlpZVVGcFVrYzVkVnBUTkhWTWJIaDFTV3B6WjJaVFFteGlTRTVzWVZkWlowdERVakJoUjJ4NlRGUTFibHBZVWtKamJXTnZTak5LYkdKWE9USmFWamx0WTIwNWRGZ3liSFZhUjFZMFNubHJjRWxJYzJkS1JqaDVUMFJuZWxwVWF6SlpiVTB4V21wUk5GbHRUVEJaVkZWNFdrUlJlVTlVWjNoWk1rMTZUbFJuTWs1RFFUbEpSMngxWkVoYWFHSkRaMnRrUjJod1kza3dLMW95VmpCUldFcHVTME5rZVZwWE1YWmtiVlptV201S2RtSldPWEJpYlZKc1pVTmpjRXRVYzJkaFYxbG5TME5GYTFoNlNUUlBSRTVzVDFSYWFWbDZWbTFPUkdocFdYcFNhRTVVUm10T1JFazFUMFJHYWxsNlRURlBSRmt3UzFOQ04wbEhVbkJhVTJkcFZVaEtkbHBJVm1wa1EwSktXa05CYTFoNlNUUlBSRTVzVDFSYWFWbDZWbTFPUkdocFdYcFNhRTVVUm10T1JFazFUMFJHYWxsNlRURlBSRmt3U1Vkc2VrbEhOWFprUTBJeVdWZDRjRnBHZUhWSmFXczNTVWd3WjBwR09IbE9WRTVyVG5wck1VNTZaekJQVkUwMVdWUm5lazV0Vm10TlJFMTNUa1JqTUZsNlp6RlpiVnB0VFdsQk9VbEZNV2hhTWxVMlQyMWtiR1JHU214ak1qa3hZMjFPYkZSWE9XdGFWM2R2U2pKT2RtTnRWWFpqTTFKMlkyMVdabGt5T1hOaVIxWnFaRWRzZG1KcFkzQk1WRFZ6WWpKR2EwdERhM1JRYmxKMlZETkNNR0ZYT1hWUldFcDVXVmhyYjB0VWMyZGFiVGw1V2xkR2FtRkRRVzlLUmpoNVRsUk9hMDU2YXpGT2VtY3dUMVJOTlZsVVozcE9iVlpyVFVSTmQwNUVZekJaZW1jeFdXMWFiVTFwUW1oamVVRnJXSHBDYTA1RVkzZE9SMUV6VFhwVk0xa3lVVFZQVkVac1RsUk5NMDFIVW1oWmJWRjRUMWRTYUU5VVp6RkxVMEkzU1VOU1prOVVUVEJOZWtsNFQwUk5lbGxxUm0xT1IwNW9UbGRGTVZwRVZUVk5WR1JxV2xSS2JFNXRXbXhOUkVGblVGTkNjR0p1VWpKWlYzZHZTa1k0ZDFwRVVUTk5SRkpyVG5wTk1VNHlUbXRQVkd0NFdsUlZlazU2UW10WlYwcHJUVlJzYTFsVWF6Uk9Wbk51WkcxR2MyUlhWVzVZVTJzM1NVZFdhbUZIT0dkSmExSnNZa2RXTUdGWE5XNUpTRUo1WWpKU01Wa3pVV2RLUmpoNVQwUm5lbHBVYXpKWmJVMHhXbXBSTkZsdFRUQlpWRlY0V2tSUmVVOVVaM2haTWsxNlRsUm5NazVEUW0xamJUbDBTVWhPTUdJelNteEpRMUptVDFSTk1FMTZTWGhQUkUxNldXcEdiVTVIVG1oT1YwVXhXa1JWTlUxVVpHcGFWRXBzVG0xYWJFMUVRV2RpU0ZacVdsYzFiRWxIYkhWYVIxWTBTVU0wZFV4c2VIVkphbk5uV2xkT2IySjVRazVaVjJSc1QycHdibHBZVWs1aU1sSnNZa05uYmxsdGVHaGpNMUp6WkZkT2JHSnRWbnBhVjBaNVdUSm5kbGx0ZUdoak0xSnpaRmRPYkdKdFZucGFWMFo1V1RKbmJrdFRNQ3RqTWxZd1ZFYzVibFV5Vm5wak1teDJZbWxvYlZsWGVIcGFVMnQwVUc1T2JHUkdUakJpTTBwc1UxZFJiMHBHT0RWTmVsRjZUV3BGTkUxNlRtbE5WMWt3V1RKRk1WbFVWbXRPVkd0NFRqSk9iRTF0VlRKYWJWVjNUVU5yZEZCdVNteGlWemt5V2xaQ2VXSXlVakZaTTFKSFkyMDVkRk5YTld0YVdHZHZTa1k0ZVU5RVozcGFWR3N5V1cxTk1WcHFVVFJaYlUwd1dWUlZlRnBFVVhsUFZHZDRXVEpOZWs1VVp6Sk9RMnMzU1VkV2FtRkhPR2RVVjBadVdsUnZObG95VmpCVVZ6bHJXbGQzYjBveVNuTlpXRTR3WWtoV2FscFhOV3hqTWxab1kyMU9iMHd5U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2IwcDVhM1JRYms1c1pFVjRkbG94VG14ak0wNXdZakkwYjFwdFJuTmpNbFZ3VEZRMWVscFlVbFJrUnpsNVdsVnNhMHREVW1aUFZFMHdUWHBKZUU5RVRYcFpha1p0VGtkT2FFNVhSVEZhUkZVMVRWUmthbHBVU214T2JWcHNUVVJCY0V4VU5XNWFXRkpVWVZod2JFdERhM1ZKYVVKcllqSk9NV0pYVm5Wa1NFMW5ZVmMwWjJGWE5XdGFXR2RuV1ZkYU1GcFlTV2RhUjFaeldsaFNjR0p0WkdOaWFVazNTVWRXYW1GSE9HZEphMUoyWW0xVmRVeHBOV05pYVVrM1NVZ3daMlpUUW14aVNFNXNZVmRaWjB0RFVqQmhSMng2VEZRMWJscFlVa0pqYldOdlNqTktiR0pYT1RKYVYwWnpZa05qY0V0VFFqZEpRMUptVDFSTk1FMTZTWGhQUkUxNldXcEdiVTVIVG1oT1YwVXhXa1JWTlUxVVpHcGFWRXBzVG0xYWJFMUVRV2RRVTBGclpFZG9jR041TUN0YU1sWXdVVmhLYmt0RFpIbGFWekYyWkcxV2FHSkhkMjVMVkhObllWZFpaMHREUld0a1IyaHdZM2t3SzJSdFJuTmhWMUpvWkVkV1ZHUkhPWGxhVTJkcldIcHJlazVFVFhsTlZHZDZUVEpKZUZwcVVtcFpWRlpvVGxkUk1VOVVSVE5aTWxWNVdsUmFiVnBVUVhkTFUydG5aWGxDYTJGWFZXOUpiRTR3WWpOS2JFbEZiR3RKUTFKbVQxUk5NRTE2U1hoUFJFMTZXV3BHYlU1SFRtaE9WMFV4V2tSVk5VMVVaR3BhVkVwc1RtMWFiRTFFUVdkaFdFMW5ZbTA1TUVsSVdtaGlSMnhyV0VjMGFVdFVjMmRtVTBKc1dUSm9ka2xEU2xOYVZ6RjJaRzFzZFZwNVFtaGlSM2RuV2tjNWFtUlhNV3hpYmxKNlNVZGFlV0l5TUdka1IyaHNTVWRzZFZwSFZqUk1hVFIxUzBkT2FHSnBRbWxhVTBKNllrYzVNMHRXZUhWSmFuTm5WRmRHYmxwVWJ6WmFNbFl3VkZjNWExcFhkMjlLTWtweldWaE9NR0pJVm1wYVZ6VnNZekpXYUdOdFRtOU1Na3B6V1ZoT01HSklWbXBhVnpWc1l6SldhR050VG05S2VXdDBVRzVPYkdSRmVIWmFNVTVzWXpOT2NHSXlORzlhYlVaell6SlZjRXhVTlhwYVdGSlVaRWM1ZVZwVmJHdExRMUptVDFSTk1FMTZTWGhQUkUxNldXcEdiVTVIVG1oT1YwVXhXa1JWTlUxVVpHcGFWRXBzVG0xYWJFMUVRWEJNVkRWNVdsY3hkbVJ0VmtKaVIzZHZTMVJ6WjFwWFRtOWllVUZwVWtjNWRWcFROSFZNYkhoMVNXcHpaMlpUUW14aVNFNXNZVmRaWjB0RFVqQmhSMng2VEZRMWJscFlVa0pqYldOdlNqSnNkVnBIVmpSWlYzaHpTbmxyY0VsSWMyZGFSMnhzUzBOS1ZXRkhiSHBKUnpGc1pFZG9kbHBEUW5CamVVSnJZVmhPYUZsdGVHeGFRMEpvWTNsQ2RXSXpTblJaVjNkbllWYzFhMXBZYUd4amFVSndZM2xDYTJJeWJIVmFlVUo2V1ZjeGJFbEhOWFprZVRWalltbEpjRTk1UVd0WWVsSnBXa2ROTUZwdFVYaGFSR3hxVFVkYWJFNXRUVEZaVkZwcVRXMU5ORTVxVVRKUFIxRXdUVzFHYkVsRU1HZGlWMnhxWTIwNU1HRlhNV3hMU0ZKNVpGZFZjRTk1UVd0WWVtdDZUa1JOZVUxVVozcE5Na2w0V21wU2FsbFVWbWhPVjFFeFQxUkZNMWt5VlhsYVZGcHRXbFJCZDBsRU1HZEtTRkp2WVZoTmRGQnRaR3hrUlVaNVdubG5ibUZYTld0YVdHaG9Za2QzYmt0VWMyZGhWMWxuUzBORmEyUkhhSEJqZVRBclpHMUdjMkZYVW1oa1IxWlVaRWM1ZVZwVFoydFllbXQ2VGtSTmVVMVVaM3BOTWtsNFdtcFNhbGxVVm1oT1YxRXhUMVJGTTFreVZYbGFWRnB0V2xSQmQwdFRhMmRsZVVKcllWZFZiMGxzVGpCaU0wcHNTVVZzYTBsRFVtWlBWRTB3VFhwSmVFOUVUWHBaYWtadFRrZE9hRTVYUlRGYVJGVTFUVlJrYWxwVVNteE9iVnBzVFVSQloyRllUV2RpYlRrd1NVaGFhR0pIYkd0WVJ6UnBTMVJ6WjJaVFFteFpNbWgyU1VOS1NtSnRVbXhsUjJ4MVdubENhR0pIZDJkYVJ6bHFaRmN4YkdKdVVucE1hVFIxUzBkT2FHSnBRbWxhVTBKNllrYzVNMHRXZUhWSmFuTm5Ta2hTYjJGWVRYUlFiRGx3WW0xc01GbFhlRXBpYlZKc1pVWk9NR0l6U214TFExSm1UMVJOTUUxNlNYaFBSRTE2V1dwR2JVNUhUbWhPVjBVeFdrUlZOVTFVWkdwYVZFcHNUbTFhYkUxRVFYQlBlVUZyV0hwa2ExbDZRVEpaTWtwcFQxUktiVTlFUVhsTk1rVXhUbGRTYUUxcVozaE5la0p0VG5wWmVVMXRWbWxKUkRCbllsZHNhbU50T1RCaFZ6RnNTMGhTZVdSWFZYQkpRekJuU2tZNE1GbHRVbXBPUjFwclRWZFJOVmw2UW0xYVZGcHFUbGRGTWxsNlNtcFBSRmt3VG1wb2EwNUVTbWhhVkhObldsZE9iMko1UVdsU1J6bDFXbE0wZFV4cFFXdFllbVJyV1hwQk1sa3lTbWxQVkVwdFQwUkJlVTB5UlRGT1YxSm9UV3BuZUUxNlFtMU9lbGw1VFcxV2FVbElUbXhaTWpsMVdraE5aMWhITkdsUGVVSTVTVWRXYzJNeVZuQmFhVUZ2U2toU2IyRllUWFJRYldSc1pFVkdlVnA1WjI1aFZ6VnJXbGhvWmxwSWJIUktlV3R3U1VoelowcEdPRFZOZWxGNlRXcEZORTE2VG1sTlYxa3dXVEpGTVZsVVZtdE9WR3Q0VGpKT2JFMXRWVEphYlZWM1RVTkJPVWxEVWpCaFIyeDZURlExYmxwWVVrSmpiV052U2pKc2RWcEhWalJZTWxJMVlsTmpjRTk1UW5CYWFVRnZTVk5TTUdGSGJIcE1WRFV5V1ZkNGNGcEhSakJhVms0d1lqTktiRXREVW1aUFZFMHdUWHBKZUU5RVRYcFpha1p0VGtkT2FFNVhSVEZhUkZVMVRWUmthbHBVU214T2JWcHNUVVJCY0V0VFFqZEpSMUp3V2xObmFWVXpVblpqYlZWblUxZFJaMHBHT0RWTmVsRjZUV3BGTkUxNlRtbE5WMWt3V1RKRk1WbFVWbXRPVkd0NFRqSk9iRTF0VlRKYWJWVjNUVU5DY0dONVFuVmlNMUZuWkcxR2MyRlhVbU5pYVVsd1QzbENPVWxIVm1waFJ6aG5TV3RzZFZwSFZqUmhWelZ1U1VWU1dsUlRRbXRpTWs0eFlsZFdkV1JJVFhWTWFUUnZXVEpHZFVsSFNteEpTRTV6WWpOamNGaEhOR2xQZVVGcldIcFNhVnBIVFRCYWJWRjRXa1JzYWsxSFdteE9iVTB4V1ZSYWFrMXRUVFJPYWxFeVQwZFJNRTF0Um14SlJEQm5ZbGRzYW1OdE9UQmhWekZzUzBoU2VXUlhWWEJQZVVGcldESlpNazlIVVRCT2FrVjZXV3BaTlUxdFVUVlBSRkpyVG1wV2JVMUVTVEJOVkZFMFRXMUplazVYUm1sSlJEQm5WRmRHYmxwVWJ6WmFNbFl3VkZjNWExcFhkMjlLTWtweldWaE9NR0pJVm1wYVZ6VnNZekpXYUdOdFRtOU1NbEkxWWxOamNFeFVOWHBhV0ZKVVpFYzVlVnBWYkd0TFExSm1UMVJOTUUxNlNYaFBSRTE2V1dwR2JVNUhUbWhPVjBVeFdrUlZOVTFVWkdwYVZFcHNUbTFhYkUxRVFYQlBlVUZyV0RKWk1rOUhVVEJPYWtWNldXcFpOVTF0VVRWUFJGSnJUbXBXYlUxRVNUQk5WRkUwVFcxSmVrNVhSbWxNVkRWd1ltMVNiR1ZGVWpWaVUyZHdUM2xCYTFoNlpHdFpla0V5V1RKS2FVOVVTbTFQUkVGNVRUSkZNVTVYVW1oTmFtZDRUWHBDYlU1NldYbE5iVlpwU1VRd1oySlhiR3BqYlRrd1lWY3hiRXRJVW5sa1YxVndTVU13WjBwR09EQlpiVkpxVGtkYWEwMVhVVFZaZWtKdFdsUmFhazVYUlRKWmVrcHFUMFJaTUU1cWFHdE9SRXBvV2xSeloxcFhUbTlpZVVGcFVrYzVkVnBUTkhWTWFVRnJXSHBrYTFsNlFUSlpNa3BwVDFSS2JVOUVRWGxOTWtVeFRsZFNhRTFxWjNoTmVrSnRUbnBaZVUxdFZtbEpTRTVzV1RJNWRWcElUV2RZUnpScFQzbENPVWxIVm5Oak1sVm5aWGxDYkZreWFIWkpRMUl3WVVkc2VreFVOVEZqTWtadVdsVm9iR0pJUVc5TFZITm5abE5DT1VsSVFqRlpiWGh3V1hsQ2JXUlhOV3BrUjJ4MlltbENNbGxYZUhCYVIwWXdXbFpPTUdJelNteExRMUptVDFSTk1FMTZTWGhQUkUxNldXcEdiVTVIVG1oT1YwVXhXa1JWTlUxVVpHcGFWRXBzVG0xYWJFMUVRWEJKU0hObllWZFpaMHRIYkhWa1NGcG9Za05uYTFoNmEzcE9SRTE1VFZSbmVrMHlTWGhhYWxKcVdWUldhRTVYVVRGUFZFVXpXVEpWZVZwVVdtMWFWRUYzUzFOQk9WQlRRWGRMVTBJM1NVaEtiR1JJVm5saWFVRnVXVmRTZEdGWE5HNVBlVUk1U1VOU1prMUhVVEJPZWtFd1drUmplazVVWkdwYVJHczFUVmRWTVUxNlkzZGFSMFpwV2tSRk5WcEhSVFZQUkZWblVGTkNUbGxYWkd4UGFuQnVXbGhTVG1JeVVteGlRMmR1V1RJNWVWcFRPWHBrUnpsNVdsTmpjRXhVTlhOaU1rWnJTME5TWms5VVRUQk5la2w0VDBSTmVsbHFSbTFPUjA1b1RsZEZNVnBFVlRWTlZHUnFXbFJLYkU1dFdteE5SRUZ3VDNsQmEyUkhhSEJqZVRBcldETk9NR0l6U214VFYxRm5VRk5CYTFoNmEzcE9SRTE1VFZSbmVrMHlTWGhhYWxKcVdWUldhRTVYVVRGUFZFVXpXVEpWZVZwVVdtMWFWRUYzVDNsQ2VWcFlVakZqYlRSblNrWTRkMXBFVVROTlJGSnJUbnBOTVU0eVRtdFBWR3Q0V2xSVmVrNTZRbXRaVjBwclRWUnNhMWxVYXpST1V6QXJXakpXTUZSdFJuUmFVMmR3VDNsQ09VbElRbmxpTTFKc1dUTlNiRnBEUW0xa1Z6VnFaRWRzZG1KcFFtWmFNbFl3VVZoU01HTnRiR2xrV0ZKc1ZtMUdjMlJYVlc5S1JqZ3dUakpWTlU1SFVtdFplbU13VDFSck5GcEVhekpOUkVWNVQxUldiRnBVWnpOWmJWVXlXWHBhYWsxNWQyZEtSamxxVGtkWk0wNVVXWHBOUkVsNlRsUmpNazlVV1hkUFJGVXlUV3BHYVZsVVRYcE9WMFpvVG5wc2FGcFRhMmRsZVVKd1dtbEJiMHBJVW05aFdFMTBVR3c1Y0dNd1JqQmtTRXB3V1c1V01GcFdWbnBhV0U1VVlqTldlVmt5Vlc5S1JqZ3dUakpWTlU1SFVtdFplbU13VDFSck5GcEVhekpOUkVWNVQxUldiRnBVWnpOWmJWVXlXWHBhYWsxNWEzQkpTSE5uWTIxV01HUllTblZKUTFJd1lVZHNla3hVTldaYU1sWXdVVmhTTUdOdGJHbGtXRkpzVVc1c1JHSXlVbXhMUTFKbVRrUmtiRTlVVW10YVIwMHpUa1JyTlU5SFVUVk9ha0Y0VFdwck1WcFhWVFJPTWtwc1RtMU5NbGw2VFhCTVZEVnVXbGhTVkdJelZubFpNbFZ2UzFNd0sxb3lWakJVTTBJd1lWYzVkVlpIVmpSa1EyZHJXREpOTUZwcVl6Rk9hazEzVFdwTk1VNTZXVFZPYWtFMFRsUlplVTFYU21oTmVrMHhXVmRGTTA5WFJteExWSE5uWmxOQ2VWcFlVakZqYlRSblNrWTVhazVIV1ROT1ZGbDZUVVJKZWs1VVl6SlBWRmwzVDBSVk1rMXFSbWxaVkUxNlRsZEdhRTU2YkdoYVZITm5abE5DZDJOdE9UQmFWMDR3V2xkUloxcHVWblZaTTFKd1lqSTBaMWd5Wkd4a1JVWXdaRWhLY0ZsdVZqQmFWVW8xVVRJNWExcFRaMnRZZWtVd1RsUk5ORnBYVG1oYVJGa3lXbGRWTlUxWFdUVlpWRmw1VGtSck5VNHlXbTFOUkdjd1RtcG5OVXRUUWpkSlNFcHNaRWhXZVdKcFFuQmpNMDVzWkVObmEyUkhhSEJqZVRBcldESkdNR1JJU25CWmJsWXdXbGhPWWtwR09IaE9SRlY2VDBkV2FsbFhVVEpPYlZac1QxUkdiVTlYUlRKTmFsRTFUMVJrYlZwcVFUUk9SRmswVDFZd2NFbEVPR2RLU0ZKdllWaE5kRkJzT1doa1NGSjVZVmRLTVdSSFZucFhlVkptVFZSUk1VMTZhR3haTWtaclRtcGFiRnBVYTNoYWFteG9UbXBKTUU5VWF6TmFiVmwzVDBSUk1rOUViR1JKUkc5bldtMUdjMk15VlRkSlNEQm5ZMGhLZG1SSFZtcGtSMVpyU1VkYU1XSnRUakJoVnpsMVNVWTVjR013UmpCa1NFcHdXVzVXTUZwV1ZucGFXRTVVWWpOV2VWa3lWVzlLUmpnd1RqSlZOVTVIVW10WmVtTXdUMVJyTkZwRWF6Sk5SRVY1VDFSV2JGcFVaek5aYlZVeVdYcGFhazE1YTJkbGVVRnJXREpSZVZscVdYaFpWRnBxVDFSb2FscFVVWGxPVjFFeVdrUldiRTVFU214TmFtZDVXV3BuTTFwcVRUTkpSREJuU2toU2IyRllUWFJRYkRsdVdsaFNRbVJJVW5saFYwb3haRWRXUTJWVlRuWmFSMVZ2U2tZNE1FNHlWVFZPUjFKcldYcGpNRTlVYXpSYVJHc3lUVVJGZVU5VVZteGFWR2N6V1cxVk1sbDZXbXBOZVdzM1NVZHNiVWxEYUhCak1UbDJXVzF3YkZrelVXOUtSamxyVFcxSk1rMVhSVEpaZW1zMFdUSlZNRTFxVm10T2JWRXhXbFJSZVZwVVNUUk5iVWswVGpKWmVrNTVhM0JKU0hOblkyMVdNR1JZU25WSlExSm1Xa1JLYVU1cVJtaE9iVTAxVDBkT2JFNUVTVEZhUkZwclRsZFZNRTF0VlhsUFJFcHBUMFJrYlUxNlkzUlFibFo2V2xoT1ZHSXpWbmxaTWxWdlMxUnpaMlpUUW5sYVdGSXhZMjAwWjFwdFJuTmpNbFUzU1Vnd1oyTklTblprUjFacVpFZFdhMGxIV2pGaWJVNHdZVmM1ZFVsR09YQmliV3d3V1ZkNFNtSnRVbXhsUms0d1lqTktiRXREVW1aUFZFMHdUWHBKZUU5RVRYcFpha1p0VGtkT2FFNVhSVEZhUkZVMVRWUmthbHBVU214T2JWcHNUVVJCY0VsSWMyZEtSamxzVFRKV2EwMUVUWHBQVkd4c1dWZEthbGxxYUdwWlYxWnFXbXBqTTFsNlVtbFpNazVzV2xSamQwMTVRVGxKUlRGb1dqSlZOazl0YUd4aVNFSnNZMmxuYmxreVJqQlpWM2gyV25rNWQyTnRPV3RrVjA0d1dESmFjMWxZVVc1TFZITm5ZVmRaWjB0RFJXdFlNbFY2V2xkUmQwMTZUVFZQVjFab1dXMU9hVTlIVG1oYVYwNXRUbnBrYWs1SFNtcFpNbFpzVG5wQmVreFVOWEJqTUZaMVdWZEtjMXBYVVc5S1JqZzFUWHBSZWsxcVJUUk5lazVwVFZkWk1Ga3lSVEZaVkZaclRsUnJlRTR5VG14TmJWVXlXbTFWZDAxRGEzQkpTSE5uU2tZNE0wMUhSbXROUkVFeFRtcG9hMXBVV21wYVZHc3hXbXBaZVZsNlZtaFplbEYzVFZSVk5VNTZSWGRhVTBFNVNVVXhhRm95VlRaUGJXUnNaRVpPY0dKdFpITmFXRkoyWW1sbmJscFhSakpNTWs1MlltMWFjRnA1WTNCSlF6QXJXakpXTUZKWE5UQmhXRkkxVmtoc2QxcFRhRTVaVjJSc1dEQk9hR1JIUm5OaU1tUm1WRmM1YTFwWGVHWlZTRXAyV2toV2FtUkVielpTVlRWVlUxWlNXa3RUUVhSUWJXUnNaRVZHTUdSSVNuQlpibFl3V2xWT2RtSkhlR3haTTFKd1lqSTBiMHRUUVhSUWJVWnJXa1pPYkdSRmJIVmFiVGh2UzFSeloxcHRPWGxhVjBacVlVTkJiMHBHT0ROTlIwWnJUVVJCTVU1cWFHdGFWRnBxV2xSck1WcHFXWGxaZWxab1dYcFJkMDFVVlRWT2VrVjNXbE5DYUdONVFXdFllbEV6V2xSck1GcEhVbXBPZWxFMVQxUm9hMDlVV1hkTlZFazFUbGRXYkU5RVpHbGFWRnBxVG0xTmVrdFRRamRKUTFJd1lVZHNla3hVTldaWldGSXdZMjFzYVdSWVVteGpNWE5yV0hwUk0xcFVhekJhUjFKcVRucFJOVTlVYUd0UFZGbDNUVlJKTlU1WFZteFBSR1JwV2xSYWFrNXRUWHBNVkRWdVdsaFNRbVJJVW5saFYwb3haRWRXUkdJeVVteExRMnhrU1VRd1owcEdPREJPTWxVMVRrZFNhMWw2WXpCUFZHczBXa1JyTWsxRVJYbFBWRlpzV2xSbk0xbHRWVEpaZWxwcVRYcHpaMlpUUWpsSlIxWnpZekpWWjJWNVFqbEpRMUl3WVVkc2VreFVOV1pqTWtWblVGTkJhMlJIYUhCamVUQXJXREprYkdSR1RteFpXRXBxWVVkR2FXSkhWa0prU0ZKNVlWZEtNV1JIVm5wTFEyczNTVU5TWms1NldUTk9lbEpvVGtSWk5Ga3lWbTFOUkdScVRucFZlRTFxVm1oTk1sbDZUMFJGTUZwVVozaE9WMGxuVUZOQ1RsbFhaR3hQYW5CdVdsaFNUbUl5VW14aVEyZHVXVEpHTUZsWGVIWmFlVGwzWTIwNWEyUlhUakJLZVd0MFVHMWtiR1JGVG5aaVIzaHNXVE5TY0dJeU5HOUxVMEYwVUcxR2ExcEdUakJpTTBwc1VtMXNjMlJIVm5sTFExSm1UMVJOTUUxNlNYaFBSRTE2V1dwR2JVNUhUbWhPVjBVeFdrUlZOVTFVWkdwYVZFcHNUbTFhYkUxRVFYQkpRekFyWXpKV01GVXpVblpqYlZaS1drTm5hMWg2YTNwT1JFMTVUVlJuZWsweVNYaGFhbEpxV1ZSV2FFNVhVVEZQVkVVeldUSlZlVnBVV20xYVZFRjNTMU5CZEZCdFJtdGFSVVl3WkVoS2NGbHVWakJhVmxKMlZUSldjMXBYVGpCTFEyUjZZVE5WYmt0VFFYUlFiVVpyV2tWR01HUklTbkJaYmxZd1dsWlNkbFV5Vm5OYVYwNHdTME5rYzJSWFRteGliVlptWVZjMWExcFlhR3hhUTJOelNVTmtjMXBYV2pCS2VXdG5URlExYUZwSFVrSmtTRko1WVZkS01XUkhWbFZpTVU1c1lrZFdhbVJEWjI1Wk1rWXdXbGRrZG1OdWJHWmhWMUZ1UzFOQmRGQnRSbXRhUlVZd1pFaEtjRmx1VmpCYVZsSjJVbTFzYzJSSFZubExRMlF5WVZoT2NGbHRiSE5oV0ZJMVNubDNaMWxZU25sWldHdHZWRmRHYmxwV09VUlpXRkpvWWtjNWJsZ3dNWFphUjFaeldERkNlV0l5VWpGWk0xSm1WbTFzZW1GWFNuQmlSMnd3WlZSdk5sWnJiRlJUVlVwS1ZFVnNWVmRXT1VOVU1WSkpURU5DVGxsWFpHeFlNRTVvWkVkR2MySXlaR1pVVnpscldsZDRabFZJU25aYVNGWnFaRVk1VjJGWVRuQlpiV3h6WVZoU05VOXFjRmRUVms1S1VXdHNUVk5XVWxwWU1HeFBXREZPUmxGV1NrUlRRMnR3U1VNd0sxbFhVbXRSV0ZJd1kyMXNhV1JZVW14V1J6bEhZVmQ0TUZwWVNXOUtNMDR3V1ZoU01XTjVZM05KUjBaNVkyMUdOVXREWkd4alUyTm5VRlEwWjAxVGEzQkpRekFyV1ZkU2ExRllVakJqYld4cFpGaFNiRlpIT1ZSYVYzaHNXVE5SYjBwSVVtOWhXRTEwVUd3NWVsbFRkMmRLTW5oc1dtNVJia3RVYzJkS1JqZ3pUbXBqTTA1SFJUQk9hbWhxV2xkWmQwNHlUVE5PVkVWNVRsZEZlbHBxVFRSTlZGSnNUMFJGTVZscE1DdFpWMUpyVVZoU01HTnRiR2xrV0ZKc1ZrYzVSMkZYZURCYVdFbHZTVWRHZVdOdFJqVkxRMEpvWTI1S2FHVlRaMmRLTWtZd1pFaEtjRmx1VmpCYVUyTm5VRlEwWjBveWVERlpNbFoxV2xZNWNHSnRVbXhsUjFaclNubDNaMG95Vm5oS2VVRTVVR2xCZDBsRGEzTkpSMFo1WTIxR05VdERRVzVaV0ZJd1kyMXNhV1JZVW14S2VVRTVVR2xCYm1KSVZtcGFWelZzV0RKc2RWcEhWalJhVjFGdVRFTkJibUp1Vm5OaVEyTm5VRlEwWjAxVFFYQkpRMnR6U1VjMU1XSkhkM05KUTJSeldsZGFNRXA1UVhCUGVVRnJaRWRvY0dONU1DdFlNMUoyWkVkR2MwbEVNR2RLUmpnelRtcGpNMDVIUlRCT2FtaHFXbGRaZDA0eVRUTk9WRVY1VGxkRmVscHFUVFJOVkZKc1QwUkZNVmxwTUN0YU1sWXdWVEpzTmxwVFozQlBlVUpzV1RKb2RrbERTa2RpTTFaMVdrTkJhVXhwVWpCaFIyeDZURlExWm1SSE9UQlpWM2QxU1dsQ2QyTnRPV3RrVjA0d1kzbENiV0l6U1dkaFZ6VnJXbGhvY0dKdFkyZGhWelJuWXpOU2RtTnRWV2RLUmpnMVRYcFJlazFxUlRSTmVrNXBUVmRaTUZreVJURlpWRlpyVGxScmVFNHlUbXhOYlZVeVdtMVZkMDFEUVhWSlJrSjVZakprZVZwWVRucEpTRlozV2tkR01GcFRRak5oVjNoelNVZEtiRWxIWkhCa2JWWjFTVWRXTWxwWVNqVkpSRTEzU1VoT2JGa3lPWFZhU0UxMVNVWjRkVWxxYzJkVVYwWnVXbFJ2TmxveVZqQlVWemxyV2xkM2Iwb3lUblpqYlZWMlkyMVdlbUl6Vm5sWk1sWm1ZVmhTYkdOdFJqQmlNMGx1UzFNd0syUXlSbk5oZVdkcldIcGpNazU2WXpCWlZGRXlUMGRPYkZwcVFUTlplbU14VFZSSk1WbFVUbTFOZW1kNFRrZFZORTFVVm1sTVZEVnVXbGhTVkZwWGVHeFpNMUZ2UzFOM1oxbFlTbmxaV0d0dldWaEtlVmxZYTI5S1NGSnZZVmhOYzBsRFpIZGpiVGxyWkZkT01GRXlSbk5pUjBwb1dUSnpia3RUYTNCUGVVSk9XVmRrYkU5cWNHNWFXRkpPWWpKU2JHSkRaMjVaYlhob1l6TlNjMlJYVG14aWJWWjZXbGRHZVZreVozWlpiWGhvWXpOU2MyUlhUbXhpYlZaNldsZEdlVmt5WjI1TFV6QXJZekpXTUZSSE9XNVZNbFo2WXpKc2RtSnBhRzFaVjNoNldsTnJkRkJ1VG14a1JrNHdZak5LYkZOWFVXOUtSamcxVFhwUmVrMXFSVFJOZWs1cFRWZFpNRmt5UlRGWlZGWnJUbFJyZUU0eVRteE5iVlV5V20xVmQwMURhM1JRYldSc1pFVnNkVnBIVmpSTFEydDBVRzFPZG1KWE1YQmtRMmR3VDNsQ1RsbFhaR3hQYW5CdVdsaFNUbUl5VW14aVEyZHVXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kMldXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWR1UzFNd0syTXlWakJVUnpsdVZUSldlbU15YkhaaWFXaHRXVmQ0ZWxwVGEzUlFiazVzWkVaT01HSXpTbXhUVjFGdlNrWTROVTE2VVhwTmFrVTBUWHBPYVUxWFdUQlpNa1V4V1ZSV2EwNVVhM2hPTWs1c1RXMVZNbHB0VlhkTlEydDBVRzA1ZDJSSGJIUmhXSEJzVTFjMWExcFlaMjlMVkhOblpsTkNkMlJYU25OaFYwMW5XbTVXZFZrelVuQmlNalJuWTBoS2RscElWbXBrUlU1b1lrZDRhVmxYVG5KTFExSm1Ua1JOTWs1RVp6Vk5NbFpyVGtkWk1VNXFaM2xhUkVrMVRrUmFiVnB0Vm0xT1YwcHJXWHBhYkUxRWEzQkpTSE5uWVZkWlowdEhiSHBqTWxZd1MwTlNaazVFVFRKT1JHYzFUVEpXYTA1SFdURk9hbWQ1V2tSSk5VNUVXbTFhYlZadFRsZEthMWw2V214TlJHeGlTak5LZG1SNVpHUkxVMEZ0U21sQ2NHTXhPV2hqYmtwb1pWTm5hMWg2VVhwT2FsRTBUMVJPYkZwRVVtMU9WRmswVFcxUmVVOVVVVEphYlZwc1dtcFdhVnBIVFRKYVZFRTFWM2xrZVdJelkyNVlVMnR3U1VoelowcEdPSGRaZW1jeVRqSlNhVmxxWnpCWmJWbDVXbXBHYkZsNldUSlBWMUpyVGxSWk1rNVhVbXBOUkdSc1dWTkJPVWxIUm5samJVWTFTME5yTjBsSFduWmpiVlpvV1RKblowdERVakJoUjJ4NlRGUTFabU15UldkWldFMW5Ta1k1YWs1VWEzaE9WMVYzVGxSWmVrMVVaek5hYW1ONFdUSlNhVTV0UlRGT1ZGRTBUakpTYlU1VVFtcE9hV3RuWlhsQ2NGcHBRVzlKVlRGb1dqSlZOazl0YUd4aVNFSnNZMmxuYmxreVJqQlpWM2gyV25rNWQyTnRPV3RrVjA0d1dESmFjMWxZVVc1TFV6QXJZVmhPUm1KdFJtbGlSMVpyUzBOU01HRkhiSHBNVkRWbVl6TlNkbU50VmtwYVEydHdTVWh6WjBwR09IZFplbWN5VGpKU2FWbHFaekJaYlZsNVdtcEdiRmw2V1RKUFYxSnJUbFJaTWs1WFVtcE5SR1JzV1ZaMFpFbEVNR2RLU0ZKdllWaE5kRkJzT1c1YVdGSkNaRWhTZVdGWFNqRmtSMVpYV1ZkNE1WcFRaMnRZTWsweFQxUkZNVnBVUVRGT2FrMTRUMFJrYlU1NlJtcGFSMGt5V1ZSVk1VNUVaek5hUjFreFRVZE5Na3hEUVd0WWVsRjZUbXBSTkU5VVRteGFSRkp0VGxSWk5FMXRVWGxQVkZFeVdtMWFiRnBxVm1sYVIwMHlXbFJCTlZkNVpIbGlNMk51V0ZaemExZ3lUVEZQVkVVeFdsUkJNVTVxVFhoUFJHUnRUbnBHYWxwSFNUSlpWRlV4VGtSbk0xcEhXVEZOUjAweVdGTnJOMGxJTUdkYVYzaDZXbE5DTjBsRFVtWk5SMDAwVG1wa2ExbHRTVFJPUjBwdFRXMVplRnBYVFRKT2FteHJXa1JWTWs1cVZtdFpla0V6V2xkR1lsaFRRVGxKUTFKbVRrUk5NazVFWnpWTk1sWnJUa2RaTVU1cVozbGFSRWsxVGtSYWJWcHRWbTFPVjBwcldYcGFiRTFFYkdKS00wcDJaSGxrWkZkNVVtWlplbFUxVFZSV2JFMUVWVEpOZWtVMFRqSlpNMDFYVG10WmFscG9UbFJWTUU5RVpHdGFhbFYzV1hwYVpFOTVRamxKU0RCblNrWTRlVTB5UlhoT2VteHNXWHBWTWs1VVpHbE9WR042VFcxU2FrNHlWVEZhYlVadFRrZFJNRTVVVlRCT1EwRTVTVWhPTUdOdGJIZFlNMUpvV2pOTmIyRlhNWGRpUnpscldsTm5ia2xEWTNOSlExSm1UVWROTkU1cVpHdFpiVWswVGtkS2JVMXRXWGhhVjAweVRtcHNhMXBFVlRKT2FsWnJXWHBCTTFwWFJYQkxWSE5uWmxOQ2NGcHBRVzloV0U1NldsaFJiMHBHT0RCTmVsa3dUMFJyZWxwWFVUQmFhbFV5VDBSS2EwMXFhekJPYlZwdFdsZFpNVmx0VW1wT2JWVjNUMVp6Ym1OdE9UTktNVEZpU2pKU2JHTXlUbmxoV0VJd1lWYzVkVW94TUhCTFUwSTNTVU5TWms1RVRUSk9SR2MxVFRKV2EwNUhXVEZPYW1kNVdrUkpOVTVFV20xYWJWWnRUbGRLYTFsNldteE5SR3hpU2pOS2RtUjVaR1JYZVdScldsaE9hbU50Ykhka1IyeDJZbWxrWkVsRE5EbEpRMk5uU25rMGEyUkhhSEJqZVRBcldESmtiR1JHUW5saU1sSXhXVE5TUkZsWVVteGFNamw1WlZVMWFHSlhWbnBMUTFKbVRrUk5NazVFWnpWTk1sWnJUa2RaTVU1cVozbGFSRWsxVGtSYWJWcHRWbTFPVjBwcldYcGFiRTFFYkdKS00wcDJaSGxrWkZkNVpHeGlibEp3WkVoc1ptRlhVVzVZVTJzM1NVZ3daMHBHT0RCT1YxWm9UVlJCZVZscVdteE5WRVY1V1ZSUmVVMVhUWGROYWxrd1dXMUdiVTV0VG1oUFZFa3dXa05CT1VsSFJubGpiVVkxUzBOa2RWbFhNV3hLZVhkdVdrZFdlbGt6U25CalNGSndZakkwYmt4RFpIcGhSemw1WkVZNWExcFlUbXBqYld4M1pFZHNkbUpwWTNOS01uZ3hXVEpXZFZwV09YZGpiVGxyWkZkT01GZ3pRblpqTW13d1lWYzVkVXA1YXpkSlExSm1UbXBLYVZwRVJUUlpWMDE0VGxkV2JFMVVhekJQUjFFMFdsUk5NVTVVVlRWUFYwWm9UbTFOZWs5VVdXZFFVMEpvWTI1S2FHVlRaM0JQZVVGcldIcFplVmx0VVhoUFIwWnFUVlJXYkZwVVJUVk9SR2hyVDBkVmVrNVVWVEZQVkd4b1dWUmFhazE2YXpKWGVXUnJXVmhTYUVveE1HZFFVMEZyV0hwSmVsbFVSVE5QVjFacVRsUlpNVTR5U1RGT2VrMTVXa2ROTTFwVVZtMVpWMWt3V2tSUk1VNVVVVEJQZVVKdFlqTktiRmxYVG05SlEyZHJXSHBSTVZwWFJYaE5SRXBwVG0xVmVFMVVTbWhPUkVsNFdYcEJlVTVxVW1sWlYxa3lXVEpGTlUxcVVtdEpSMFo2U1VOU1prMXFUbWhQVkVFeldsZEplRnB0Um14T1ZHeHFXa1JKZDFsVVVUTmFWRnBwVGtSSk5GbHFWbXhaYWxWd1NVaHpaMkZYV1dkTFIyeDZZekpXTUV0RFVtWk9SRTB5VGtSbk5VMHlWbXRPUjFreFRtcG5lVnBFU1RWT1JGcHRXbTFXYlU1WFNtdFplbHBzVFVSc1lrb3pTblprZVdSa1YzbFNaazFxVG1oUFZFRXpXbGRKZUZwdFJteE9WR3hxV2tSSmQxbFVVVE5hVkZwcFRrUkpORmxxVm14WmFsWmtTMU5yWjJWNVFXdFllbGw1V1cxUmVFOUhSbXBOVkZac1dsUkZOVTVFYUd0UFIxVjZUbFJWTVU5VWJHaFpWRnBxVFhwck1sZDVaSGRqYlRsclpGZE9NRmg1WTNWS1JqaDVUVEpGTlUxRVpHeFpha1p0V1ZkVk1VOVhUbXROYWtKb1RrUmtiRTV0U1RCTmFtaHBUbGRXYVU1V01HZFFVMEo2WkVoS2NHTkdPVEJaVjJSNlMwTlNaazVFVFRKT1JHYzFUVEpXYTA1SFdURk9hbWQ1V2tSSk5VNUVXbTFhYlZadFRsZEthMWw2V214TlJHeGlTak5LZG1SNVpHUlhlVkptVFdwT2FFOVVRVE5hVjBsNFdtMUdiRTVVYkdwYVJFbDNXVlJSTTFwVVdtbE9SRWswV1dwV2JGbHFWbVJMVkhOblpsTkNPVWxIYkcxSlEyaHdZek5PYkdSRFoydFllbEY2VG1wUk5FOVVUbXhhUkZKdFRsUlpORTF0VVhsUFZGRXlXbTFhYkZwcVZtbGFSMDB5V2xSQk5WZDVaSGxpTTJOdVdGWnpibU15ZERGS01UQndTMU5DTjBsRFVtWk9ha3BwV2tSRk5GbFhUWGhPVjFac1RWUnJNRTlIVVRSYVZFMHhUbFJWTlU5WFJtaE9iVTE2VDFSYVlrb3pRbmxpTWxJeFdUTlNabU15ZERGS01UQm5VRk5CYTFoNlVYcE9hbEUwVDFST2JGcEVVbTFPVkZrMFRXMVJlVTlVVVRKYWJWcHNXbXBXYVZwSFRUSmFWRUUxVjNsa2VXSXpZMjVZVm5OdVl6SjBNVW94TURkSlNEQm5WRmRHYmxwVWJ6WmFNbFl3VkZjNWExcFhkMjlLTWtweldWaE9NR0pJVm1wYVZ6VnNZekpXYUdOdFRtOU1Na3B6V1ZoT01HSklWbXBhVnpWc1l6SldhR050VG05S2VXdDBVRzVPYkdSRmVIWmFNVTVzWXpOT2NHSXlORzlhYlVaell6SlZjRXhVTlhwYVdGSlVaRWM1ZVZwVmJHdExRMUl3WVVkc2VreFVOV1pqTTFKMlkyMVdTbHBEYTNSUWJVWnJXa1pDZVdJeVVqRlpNMUpWWWpCc2RWcEhWalJMUTFKbVRrUk5NazVFWnpWTk1sWnJUa2RaTVU1cVozbGFSRWsxVGtSYWJWcHRWbTFPVjBwcldYcGFiRTFFYkdKS00wcDJaSGxrWkZkNVpHeGlibEp3WkVoc1ptRlhVVzVZVTNkblNrWTRNazF0U210TlZHaG9XWHBGTVZwWFZYaFBWRkUwV2tSb2JFMTZWVEZPVkdzMVdWZEZNbGw2VFRWT2FYZG5aRWhLTVZwVGQyZGFiVVp6WXpKVmNFOTVRazVaVjJSc1QycHdibHBZVWs1aU1sSnNZa05uYmxsdGVHaGpNMUp6WkZkT2JHSnRWbnBhVjBaNVdUSm5kbGx0ZUdoak0xSnpaRmRPYkdKdFZucGFWMFo1V1RKbmJrdFRNQ3RqTWxZd1ZFYzVibFV5Vm5wak1teDJZbWxvYlZsWGVIcGFVMnQwVUc1T2JHUkdUakJpTTBwc1UxZFJiMHBJVW05aFdFMTBVR3c1ZW1SSE9YbGFWV3hyUzFNd0sySlhSbmxoTUVaNlUxYzFhMXBZYUU5aU0xSlRXbGhHTVdGWVNteGFRMmRyV0hwUmVrNXFVVFJQVkU1c1drUlNiVTVVV1RSTmJWRjVUMVJSTWxwdFdteGFhbFpwV2tkTk1scFVRVFZYZVdSNVlqTmpibGhXYzI1YVZ6VXdZVmhTTlZneWJHdEtNVEJ3VDNsQmEyUkhhSEJqZVRBcldETkNlV0l5VG14ak0wNXNXa1ZPZG1SWE5UQkxlWE0zU1Vkc2JVbERaMnRrUjJod1kza3dLMWd5VW5Cak0wSnpXVmhzVGxwWVRucFpWMlJzVlcxV2VFdERhMmRRVkRCblpFaEtNVnBUYTJkbGVVSnNXVEpvZGtsRFVqQmhSMng2VEZRMVptTklTblpaTWxaNll6SldhMUV5T1RGaWJsRm5UR2xCYVVsSVFubGlNazVzWXpOT2JGcERRVzlKYVVGMVNVaEtkbVJYTld0TFExSXdZVWRzZWt4VU5XWmpTRXAyV1RKV2VtTXlWbXRSTWpreFltNVJka3BJVW05aFdFMTBVR3c1TUdJelVtaGlRMjk0VFVSQmMwMXBhMmRNYVVGcFNsTnNZMkpwU1RkSlNEQm5ZVmRaYjFwdVZuVlpNMUp3WWpJMVpscFlhSEJqTTFKNlMwTmtibGt4T1dwaU1uaHpXbGRPTUZneVRqVlpNbmhzWTNsamNFdFRRamRKUjJScVdESk9kbUpIZUd4Wk0xSm1XVE5zYW1KSFZucExRMnMzU1Vnd1oyRlhXV2RMUTFJd1lVZHNla3hVTlc1YVdGSkNZMjFqYjBveVRtcEtlV3R3U1VoeloxUlhSbTVhVkc4MldqSldNRlV5YkhWYU1uaHNaRWM1ZFV0RFpHcGlNMHBzVEROS2JHTXlPVEZqYlU1c1NubHJkRkJ0Wkd4a1JVNTJZbTAxYkZrelVuQmlNalJ2U2pKT2RtTnRWbVprTTBwd1pFZFZia3RUTUN0Wk1uaDJZekpXUkdJeU5YVmFWMDR3WVZjNWRVdERhemRKU0RCblpsTkNkMk50T1RCYVYwNHdXbGRSWjFwdVZuVlpNMUp3WWpJMFoxZ3pVbkJpVjFaNVZUTlNhR051VVc5TFUwSTNTVU5TTUdGSGJIcE1WRFZtWkVkc2RGcFlTbFJrUjBaNVpFTkJPVWxITVhCWk0wcDJaRWRzZEZwVGFEQmpibFpzUzFSeloyWlRRbmRqYlRrd1dsZE9NRnBYVVdkYWJsWjFXVE5TY0dJeU5HZFlNbEp3WXpOQ2MxbFliRTVhV0U1NldWZGtiRlZ0Vm5oTFEydG5aWGxCYTJSSGFIQmplVEFyV0ROU2NHSlhWbmxTVjNob1kwaE9iRnBEUVRsSlJ6RndXVE5LZG1SSGJIUmFVMmd3WTI1V2JFdFRRWFJKUTFJd1lVZHNla3hVTldaa1IyeDBXbGhLVkdSSFJubGtSSE5uWVZkWlowdERVakJoUjJ4NlRGUTFabVJIYkhSYVdFcEdZa2RHZDJNeVZtdEpSRFJuVFhwQmNFbEljMmRLU0ZKdllWaE5kRkJzT1RCaFZ6RnNZMnhPTUZsWVNqQkxRMnMzU1VoS2JHUklWbmxpYVVJd1kyNVdiRTk1UWpsSlNFcHNaRWhXZVdKcFFtMVpWM2g2V2xSeloyWlRRbmRqYlRrd1dsZE9NRnBYVVdkYWJsWjFXVE5TY0dJeU5HZFlNbVJzWkVaQ2VXSXlVakZaTTFKRVdWaFNiRm95T1hsbFZUVm9ZbGRXZWt0RFVtWk5lbXQzVFdwQk5VMUhWWHBaYlVacFdsUkJlRTlIU1ROUFYwWnBXbTFXYUUxVVdteGFSRTB6VFZkRmNFbEljMmRoVjFsblMwTlNaazE2YTNkTmFrRTFUVWRWZWxsdFJtbGFWRUY0VDBkSk0wOVhSbWxhYlZab1RWUmFiRnBFVFROTlYwVm5VRU5CZUV0VFFqZEpTRXBzWkVoV2VXSnBRVGRKU0RCblNrWTRNMDVxUlRCUFJFbDRUVzFPYkZwcVVUUk5WMXBvV20xTk0wNVhSWGhaTWtVd1RrUnNhMDVYVW10YWFVRTVTVU5qYms5NVFuQmFhVUZ2VkZkR2JscFVielphTWxZd1ZUTlNkbU50VmtSaU1qVnRZVmRrUjJKSFJtNUxRMlIzWVVoQk1HUlRPWGRoU0VFd1pGWTVibU50T1RGalF6bDNZVWhCTUdSV09XaGFSMUptV1RKR01GcFhaSFpqYm14bVltMUdkRnBZVFc1TFUwRTVVRlF3WjFaR1NsWlNVMnRuWlhsQmExZ3pRbmxpTWxJeFdUTlJaMUJUUWs1WlYyUnNUMnB3YmxwWVVrNWlNbEpzWWtObmJsa3lSakJaVjNoMlduazVkMk50T1d0a1YwNHdTbmxyZEZCdGVIWlpWMUZ2U2tZNGVrOVVRWGxOUkd0M1dsUk9hVmxYU214TlJFVTBXV3BqTlZsWFNtMWFWMFY0VG0xV2EwMTZZM2haVTJzM1NVTlNaazE2U1RWT1YxSnJUa1JuTkZwSFZYbFBSR040V2tSak5GcFVVVEpaYlVwclRtcEZNbGxxVVhwT1ZHdG5VRk5CYTFnelFubGlNbEl4V1ROUmRGQnRaR3hrUlU1b1pFZFdibUl6U2pWVFYxSjZTME5yTjBsSFduWmpiVlpvV1RKbmIwcEdPSHBOYW1zeFdrZFJNRTlFYUd0YVZFazBUbnBHYTA1NmFHeE9SRnBwV1cxUk1rMVVXbWxPUkUweFQxTkNhR041UVd0WWVrNXJXV3BKZDAxWFNUTk5WRlV6VG0xYWFFNXFiR2xOUkZsM1RWZGFhMDU2WjNkYVIxVjVUVlJvYWt0VFFqZEpRMUptVG5wa2JVMVVXWGRPYW10NVRUSlZNazlVYUcxTmJWRXpXVlJzYlZwSFVteFpWRVpvVG5wSmVrMXFSV2RRVTBKT1dWZGtiRTlxY0c1YVdGSk9ZakpTYkdKRFoyNVpNa1l3V1ZkNGRscDVPV3BaV0ZKc1dqSTVlV1ZUWTNCTVZEVnpZakpHYTB0RFVtWk5NbEpwVFdwQmVGbHFZM2hPVkdNeVdtMUZNazlYU1hkT2FrRjRXbTFSTTA5RVFtdGFWRWw0VDBkTmNFOTVRV3RZZW1NeVRWUlJORTFxUlhsWk1sWnRUa1JuZUZwdFJtMVplbU14V1ZSR2FsbFVVVEJQVjFFeFdrZFNiVWxETkRsSlEyTm5TbmswYTFoNll6TmFha1V5VFVSWk5VMXFUbXhPYW1zMFdtcEthMDR5UlRWYWJWSnJXbGRGZUZsVVkzbE5la2w0VEZRMWJscFlVazlaVnpGc1MwTnJOMGxJTUdkbVUwSjVXbGhTTVdOdE5HZEtSamd6VG1wRk1FOUVTWGhOYlU1c1dtcFJORTFYV21oYWJVMHpUbGRGZUZreVJUQk9SR3hyVGxkU2ExcHFjMmRtVTBKM1kyMDVNRnBYVGpCYVYxRm5XbTVXZFZrelVuQmlNalJuV0RKa2JHUkdUbXhaV0VwcVlVZEdhV0pIVmtKa1NGSjVZVmRLTVdSSFZucExRMnRuWlhsQmExaDZUWHBQUjFKclQxUldhRTVVU1hwWmFsRXhXbXBrYVZwcVNYbGFSRUpvV1dwWk5VMUVRVEZaZWtVMVNVUXdaMWxZU25sWldHdHZTMVJ6WjBwR09IaE5lazB3V1dwUk0wOUhWVE5OYWxFeVdrUlZlVTVFV21sWmVrazFUbFJCTkUxVVRYZFpiVkpvVFhsQk9VbEZNV2hhTWxVMlQyMWtiR1JHVG5CaWJXUnpXbGhTZG1KcFoyNWFWMFl5VERKT2RtSnRXbkJhZVdOd1RGUTFibHBZVWtaaWJsSndaRWhzVldWWVFteExRMlJxV1ZoU2FHSkhPVzVZTTBKNVlqSlNNVmt6VVc1TFZITm5Ta1k0ZWxsVVl6UmFSMXBwVFZSSk1FMTZVVEJQUjFreldsZFpNbGt5VVRGTlJFMTZUMVJuTTA1cVZURk5VMEU1U1VOU1prMVVUWHBPUjBrd1RucG9iRTU2U1RCT2JWRXhUV3BSTWxsdFRYbFBWRlYzVDBSRmVrMUhTbXRaVkUxMFVHMWtiR1JGVm5Wa1Iyd3daVk5uY0U5NVFXdFlNbHByVGxkS2FWbDZVbXRhYW1zMVRsUkJNMDlYUlRKWmVtTjNXbFJOTkU5VVdUQk5SMVUwVGtSUmQwbEVNR2RVVjBadVdsUnZObG95VmpCVmJWWjZZak5XZVZreVZrNWlNbEpzWWtObmJsa3lSakJaVjNoMlduazVkMk50T1d0a1YwNHdXREpHTUdSSVNuQlpibFl3V2xZNWFtSXllSE5hVjA0d1lWYzVkVXA1YTJkTVZEVjZXbGhTUm1KdVVuQmtTR3hWWlZoQ2JGSnRiSE5rUjFaNVMwTlNaazFVVFhwT1Iwa3dUbnBvYkU1NlNUQk9iVkV4VFdwUk1sbHRUWGxQVkZWM1QwUkZlazFIU210WlZFMTBVRzFrYkdSRlZuVmtSMnd3WlZaU05XTkhWa3BhUTJkd1MxUnpaMkZYV1dkTFJURm9XakpWTms5dFpHeGtSVEYyV2tkV2MwdERaR2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRE9XbGlSMFo2WkVkNE1Wa3lWblZhV0U1c1dWaEthbUZEWTNCTVZEVndZekF4YUZveVZuVmtSemxYV2xoS1RWcFlUbnBOVkZGdlMxTnJaMlY1UVd0WU1scHJUbGRLYVZsNlVtdGFhbXMxVGxSQk0wOVhSVEpaZW1OM1dsUk5ORTlVV1RCTlIxVTBUa1JSZDB4VU5XNWFXRkpVV2xkNGJGa3pVVzlMVXpBclpESm9iR050Vlc5SlEyUm9Xa2RTY0dSSGJIWmliVVp6V0ROU2FGbHRlR3hNYld4NldETk9iRmxZU21waFIwWnBZa2RWWjFCVFFYaEpSVGxUU1VOamRVbERVbVphYlZFeFdXMUthazVIVW0xUFZHc3hUVVJqTlZsVVdtcE9la0pzVFhwbk5VNXFVWGRhVkdjd1RrUkJkRkJ0Wkd4a1JVNTJZbTAxYkZrelVuQmlNalJ2UzFNd0syTllWblprUjFaS1ltNVNka3REWkhSWlYyeDFXRE5TYUZsdGVHeE1iVVl3WkVoS2NGbHVWakJhVmpscVlqSlNiRWxGYkU5SlEyY3ZTMU5qYzBsSFJubGpiVVkxUzBOa2VtUkhSakJrV0UxdVRFTkJibVJ0YkhwaFYwcHdZa2RzTUdWVFkzQkxVMEZ3VDNsQ09VbEhWbk5qTWxWblpYbEJhMWd5V210T1YwcHBXWHBTYTFwcWF6Vk9WRUV6VDFkRk1sbDZZM2RhVkUwMFQxUlpNRTFIVlRST1JGRjNURlExYUZwSFVsUmFWMFo1V1RKb2FGbHRlR3hSV0ZJd1kyMXNhV1JZVW14U2JXeHpaRWRXZVV0RGF6ZEpTREJuU2tZNE0wMUhSbXROUkVFeFRtcG9hMXBVV21wYVZHc3hXbXBaZVZsNlZtaFplbEYzVFZSVk5VNTZSWGRhVTBFNVNVTlNabHB0VVRGWmJVcHFUa2RTYlU5VWF6Rk5SR00xV1ZSYWFrNTZRbXhOZW1jMVRtcFJkMXBVWnpCT1JFRjBVRzFrYkdSRmJEQmFWekY2UzBOck4wbEhXblpqYlZab1dUSm5aMHREVW1aT2VrSm9Xa1JCZDA1VVdUUmFSMVV5V1RKVk5VNVhXVEpOYlUweFdWZE5NRTFFUlRGUFZHTjRUVWRWWjFsWVRXZEtSamd3VGpKVk5VNUhVbXRaZW1Nd1QxUnJORnBFYXpKTlJFVjVUMVJXYkZwVVp6TlpiVlV5V1hwYWFrMTVhMmRsZVVGcldESlplRTR5VlROT2VscHNXbTFhYUZscVVUQk5WR3MwVDFSQmVrOVVhekpaYWtVeFdsUlZORTFVV20xSlJEQm5Ta1k0ZWxsVVl6UmFSMXBwVFZSSk1FMTZVVEJQUjFreldsZFpNbGt5VVRGTlJFMTZUMVJuTTA1cVZURk5VekFyV2pKV01GRllVakJqYld4cFpGaFNiRXREVW1aT1JHUnNUMVJTYTFwSFRUTk9SR3MxVDBkUk5VNXFRWGhOYW1zeFdsZFZORTR5U214T2JVMHlXWHBOZEZCdFpHeGtSV3hyUzBOcmNFOTVRV3RZZWsxNlQwZFNhMDlVVm1oT1ZFbDZXV3BSTVZwcVpHbGFha2w1V2tSQ2FGbHFXVFZOUkVFeFdYcEZOVmN4TUdkUVUwRnJXREpaZUU0eVZUTk9lbHBzV20xYWFGbHFVVEJOVkdzMFQxUkJlazlVYXpKWmFrVXhXbFJWTkUxVVdtMU1WRFZ1V2xoU1FtUklVbmxoVjBveFpFZFdSR0l5VW14TFEyczNTVWd3WjJOdFZqQmtXRXAxU1VOU1prMTZUVFJhUjFFMVRsZEZNVTFxVG1sT1JGWnRUakpLYlUxcVNtdE5SMFpwVG1wcmQwMUVWbXBOVkdzM1NVZ3daMk5JVm1saVIyeHFTVWRhTVdKdFRqQmhWemwxU1VoV2VsbFhaR3hUUjFaelkwTm5jRWxJYzJkamJWWXdaRmhLZFVsRFNtTmlhVUpXWXpKR2JscFViMmRKU0VKdlkwTkJkRnBwUW5Oa1YwNXNZbTFWZEdSSE9YWmlRelYzWVVoQloxY3lPWGRrUjJ4MlltNU9aRmhITkdkSlEwRjBURmhLYkdKWE9USmFWamwxWWpOU1pscFlhSEJqTTFKd1ltMWpaMUJJVGpCaU0wcHNVMWRSSzBsRFFXZEpRMEZuU1VOQlowbEdTbXhpVnpreVdsaE5aMkp0T1RCSlIxWTBZVmhPTUdGWE5XNUpTRUo1WWpKU01Wa3pVbnBKUjFwNVlqSXdaMkZYTld0YVdHaGpZbWxCWjBsRE1IUmpiVlo2V2xoU1ptTXlWbWhqYlU1dldETktiR016Vm5Oa1NFMW5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblVUSjRiRmxZU25wSlJ6Rm9XakpXZFdSSE9HZGpNbFpvWTIxT2IwbElTbXhqTTFaelpFaE9ZMkpwUVdkSlF6QjBZak5DTUdGWE1YQmxiVlptWVZjMWExcFlaMmRRU0U0d1lqTktiRk5YVVN0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQloxUXpRakJoVnpGd1pXMVdla2xGZURGWk1sWjFXbE5DY0dKdFVteGxSbmgxU1VOQloweFRNWFJaV0VweVdETldkV05JU25aWk1sWjZZekpXYTBsRWVIcGtSemw1V2xWc2ExQnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwSk9XVmhLY21ONVFtaGlSM2RuWTBoS2RscElWbXBrU0UxbldtMDVlVWxIWkhCa2JWWjFTVWhPTUdJelNteEpSMFo2U1VoV2RXTklTblpaTWxaNll6SldhMWhITkdkSlEwRjBURmRPZG1SWE5UQllNMEo1WWpKT2JHTXpUbXhhUTBFNFl6TlNkbU50VmtwYVJEUm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEdTbXhrU0ZaNVltNU5aMkp1Vm5SWmJWWjVTVWM1YlVsSVFubGlNbEl4V1ROU2VrbEhNV2hqYlhSc1drTkNhR041UW5kamJUbHFXbGhPZWxwWFVtTmlhVUZuU1VNd2RGa3lPVEZpYmxKbVlWYzFhMXBZYUd4YVEwRTRZek5TZG1OdFZrcGFSRFJuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkVmJWWXdaRmhLZFdONVFuVmtWekZwV2xoSloySXlXV2RpYlRsMVRGZFNiR0pIVmpCYVYxRm5Xa2M1YW1SWE1XeGlibEo2U1Vkc2RVbEhiSFZhUjFZMFdFYzBaMGxEUVhSTVdFcHNZbGM1TWxwV09XMWpiVGwwV0RKc2RWcEhWalJKUkhoM1kyMDVhMlJYVGpCVFYxRXJTVU5CWjBsRFFsTmFWekYyWkcxV2VrbEhPWFZhVTBKM1kyMDVhMlJYVGpCSlIxcDVZakl3WjFsWGVITkpSMngxV2tkV05GcFlUV2RMUjJ4cldsYzFNR0ZYV25CYVYxRm5XVzVyWjJOSVNuWmFTRlpxWkVWc2EwdFdlSFZKUTBGblRGTXhlVnBYTVhaa2JWWm9Za2QzWjFCSVRqQmlNMHBzVTFkUkswbERRV2RKUTBGblNVTkNVMXBYTVhaa2JWWjZTVWRHYzJKRFFtdGlNazR4WWxkV2RXUklUV2RhYmtwMllsTkNjR0p0VW14bFJuaDFTVU5CWjB4VE1YQmliVkpzWlVZNWEyVlhNR2RRU0U0d1lqTktiRk5YVVN0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBKS1ltMVNiR1ZIVm5wSlEyUkZZbmxDTldJelZXZGlWMVpvWW1vNGJrbEhVbWhrUjBWblNVTkJkRXhYYkhWYVIxWTBXVmQ0YzBsRWVIcGtSemw1V2xWc2ExQnBRbUpNVXpGcVdURXdaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpSVXBzWkVkRloyRlhOV3RhV0doc1kybEJkRWxITVRGWk1tZG5ZMWhXY0ZreWRHeGphWGRuVEZNeGFsbDVRak5oVjNoelNVaE9kbUpJV214SlJ6RTFZek5HYzBsSFpIWmliVlZuV1Zoa2FHVlRRbkJqTTA0eFdsaE5aMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpSMmhzWWtoQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMVpIYUhCamVVSnZXbGQ0ZDFoSE5XTmliSGgxU1VOQloxQklUakJpTTBwc1UxZFJLMGxIYkhwSlNGcG9Za2RzYTBsSVRqQmlNMHBzU1VWc2EwbEhXWFZhVXpSblRWWjRkVWxEUVdkUVNFSjVZakpTTVZrelVrcGFSRFJuWVZoTloyUnRSbk5oVjFGblkwaEtkbHBJVm1wa1EwSktXa05CYjFwWE5UQmhXRkkxV0RKc2EwdFRRbTFNYlZWMVNVUkZlVTE2VW1OaWJIaDFTVU5CWjJWWE9URkpSMDVvWW1sQ2VscFhWV2RqU0VwMldqTktiR016VFdkaFZ6Um5aRzFHZVV3eWVIWmFlVGxwWWtkR2VtUkhlREZaTWxaMVdsaE9iRmxZU21waFF6VnpZakprWTJKcFNUZEpTREJuWmxOQmExaDZUVEZOUkVac1dXcEJOVTU2VlhsYVIxSnJUMGRKTkUxNlVtdE9lazVvVFZkUmVrNXRXVE5PZWtWNVNVUXdaMkp0VmpOSlJURm9XakpXWmxVeWFHeGlSM2htVkVoV2FscFhOV3hZTVZKMllqSjNiMHRVYzJkS1JqaDZUbFJCZUZwWFNYZFBWR014VFcxU2ExcEVhR2xQUkUwd1drUmplbGxVUm10TmVscHRUbnBqZUUxcE1DdGpibFoxUzBOck55STdKRjlFUFhOMGNuSmxkaWduWldSdlkyVmtYelEyWlhOaFlpY3BPMlYyWVd3b0pGOUVLQ1JmV0NrcE93PT0iOyRfRD1zdHJyZXYoJ2Vkb2NlZF80NmVzYWInKTtldmFsKCRfRCgkX1gpKTs=";$_D=strrev('edoced_46esab');eval($_D($_X));